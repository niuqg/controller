/*
* Generated file
*
* Generated from: yang module name: odl-sal-netconf-connector-cfg yang module local name: sal-netconf-connector
* Generated by: org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator
* Generated at: Mon Jun 16 12:25:13 CST 2014
*
* Do not modify this file unless it is present under src/main directory
*/
package org.opendaylight.controller.config.yang.md.sal.connector.netconf;
public interface NetconfConnectorModuleMXBean {
    public java.lang.Long getPort();

    public void setPort(java.lang.Long port);

    public javax.management.ObjectName getWorkerThreadGroup();

    public void setWorkerThreadGroup(javax.management.ObjectName workerThreadGroup);

    public java.lang.Long getConnectionTimeoutMillis();

    /**
    * Specifies timeout in milliseconds after which connection must be established.
    */
    public void setConnectionTimeoutMillis(java.lang.Long connectionTimeoutMillis);

    public java.lang.Integer getBetweenAttemptsTimeoutMillis();

    /**
    * Timeout in milliseconds to wait between connection attempts.
    */
    public void setBetweenAttemptsTimeoutMillis(java.lang.Integer betweenAttemptsTimeoutMillis);

    public javax.management.ObjectName getBossThreadGroup();

    public void setBossThreadGroup(javax.management.ObjectName bossThreadGroup);

    public java.lang.String getPassword();

    public void setPassword(java.lang.String password);

    public javax.management.ObjectName getDomRegistry();

    public void setDomRegistry(javax.management.ObjectName domRegistry);

    public javax.management.ObjectName getClientDispatcher();

    public void setClientDispatcher(javax.management.ObjectName clientDispatcher);

    public java.lang.String getUsername();

    public void setUsername(java.lang.String username);

    public java.lang.String getAddress();

    public void setAddress(java.lang.String address);

    public java.lang.Boolean getTcpOnly();

    public void setTcpOnly(java.lang.Boolean tcpOnly);

    public java.lang.Long getMaxConnectionAttempts();

    /**
    * Maximum number of connection retries. Non positive value or null is interpreted as infinity.
    */
    public void setMaxConnectionAttempts(java.lang.Long maxConnectionAttempts);

    public javax.management.ObjectName getEventExecutor();

    public void setEventExecutor(javax.management.ObjectName eventExecutor);

}
